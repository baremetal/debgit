#!/usr/bin/env python
"""
debgit-get-version <branch> [options]

Generate a software version based on the given branch and the current time.



root@lucid64:/appscale/appscale# git describe --tags
0.0.1-5-gff4eb19
root@lucid64:/appscale/appscale# git tag -d 0.0.1
Deleted tag '0.0.1' (was 92839d3)
root@lucid64:/appscale/appscale# git describe --tags
fatal: No names found, cannot describe anything.
"""
import os
import sys
import time

import sh

from clint.command import Command


class Debchange(Command):
    def __init__(self, doc=None):
        super(Debchange, self).__init__(doc=doc or __doc__)

    def run(self):
        git_version = ''
        git_sha = None
        now = time.strftime('%y%j.%H%M')

        try:
            git_describe = str(sh.git('describe', tags=True).strip())
            git_describe_split = git_describe.split('-')

            git_version = git_describe_split[0]

            if len(git_describe_split) > 1:
                git_sha = git_describe_split[-1]
        except sh.ErrorReturnCode_128:
            git_version = '0.0'

        # when no sha is found, we are on an actual tag rather than development
        # from a particular tag.  in this case, simply use the bare version
        # number rather than generating a date+sha-based version number.
        if git_sha:
            sw_version = '{0}+{1}+{2}'.format(git_version, now, git_sha)
        else:
            sw_version = git_version

        print sw_version

if __name__ == '__main__':
    command = Debchange()
    try:
        command.run()
    except KeyboardInterrupt:
        command.quit()
